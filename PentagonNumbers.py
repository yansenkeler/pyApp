# Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are: 1, 5, 12, 22,
# 35, 51, 70, 92, 117, 145, ... It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference,
# 70 − 22 = 48, is not pentagonal. Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference
#  are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
import math
import time
import tools


start_time = time.time()
min_d = 1000000000
for i in range(1, 3000):
    for j in range(i+1, 3000):
        p1 = int(i * (3 * i - 1) / 2)
        p2 = int(j * (3 * j - 1) / 2)
        sum_p1_p2 = int(p1 + p2)
        diff_p1_p2 = int(abs(p1 - p2))
        # print(p1, p2, sum_p1_p2, diff_p1_p2)
        if tools.is_pentagon_number(sum_p1_p2) and tools.is_pentagon_number(diff_p1_p2):
            if diff_p1_p2 < min_d:
                print(i, j, p1, p2, sum_p1_p2, diff_p1_p2)
                min_d = diff_p1_p2

print('result is ', min_d)
print('total time is ', time.time() - start_time, 'ms')
